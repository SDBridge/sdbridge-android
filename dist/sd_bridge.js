!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.sd_bridge=n():e.sd_bridge=n()}(self,(()=>{return e={},(()=>{var n=e;Object.defineProperty(n,"__esModule",{value:!0}),n.addBridgeForAndroidWebView=function(){if(window.WebViewJavascriptBridge)return;window.WebViewJavascriptBridge={registerHandler:function(n,o){e[n]=o},callHandler:function(e,n,o){2===arguments.length&&"function"==typeof n&&(o=n,n=null),t({handlerName:e,data:n},o)},handleMessageFromNative:function(o){const r=JSON.parse(o);let a;if(r.responseId){if(a=n[r.responseId],!a)return;a(r.responseData),delete n[r.responseId]}else{if(r.callbackId){const e=r.callbackId;a=function(n){t({handlerName:r.handlerName,responseId:e,responseData:n})}}const n=e[r.handlerName];n?n(r.data,a):console.log("WebViewJavascriptBridge: WARNING: no handler for message from Kotlin:",r)}}};let e={},n={},o=1;function t(e,t){if(t){const r="cb_"+o+++"_"+(new Date).getTime();n[r]=t,e.callbackId=r}window.normalPipe.postMessage(JSON.stringify(e))}}})(),e;var e}));